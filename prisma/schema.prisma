// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}
model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  posts   Post[]
  profile Profile?
}

model Agent {
  id Int @id @default(autoincrement())
  codeAgent String @unique
  password String
  email String
  role String
  assignation Assignation[]
  choose Choose[]

}

model Assignation{
  id Int @id @default(autoincrement())
  agent Agent @relation(fields: [agentId],references: [id])
  agentId Int
  mission Mission @relation(fields: [missiontId],references: [id])
  missiontId Int
}

model Mission {
  id Int @id @default(autoincrement())
  designation String
  description String
  objectif String
  dateStart DateTime
  status String
  risque String
  cost String
  ressource String
  assignation Assignation[]
}

model Equipment{
  id Int @id @default(autoincrement())
  designation String
  choose Choose[]
}

model Choose{
  id Int @id @default(autoincrement())
  agent Agent @relation(fields: [agentId],references: [id])
  agentId Int
  equipment Equipment @relation(fields: [equipmentId],references: [id])
  equipmentId Int
}